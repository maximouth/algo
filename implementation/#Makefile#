
GCC=gcc
GPP=g++

#FLAGS=-Wall # User definitions must be here
EXEC6 = Projet.x 
INCS6 = entree_sortie.h fplot.h reseau.h hachage.h chaine.h arbre.h tas.h tas_dijkstra.h dijkstra.h 
SOURCES6 = entree_sor
tie.c fplot.c reseau.c hachage.c chaine.c arbre.c tas.h  tas_dijkstra.c dijkstra.c  main_ex.c
OBJS6 = $(SOURCES6:.c=.o)
-g -D DEBUG
FLAGS=-Wall -g 
GCCFLAGS=  -g
CPPFLAGS= -D DEBUG
LIBS= -lm

# User definitions must be here
EXEC = Projet_ex.x
INCS = graph.h entree_sortie.h lectGraph.h
SOURCES = graph.c main.c entree_sortie.c lectGraph.h
OBJS = $(SOURCES:.c=.o)


# Building the world
all: $(EXEC) 

$(EXEC): $(INCS) $(OBJS) 
	$(GCC) $(GCCFLAGS) $(OBJS) $(LIBS) -o $(EXEC) 


.SUFFIXES:
.SUFFIXES: .c .cc .o

.cc.o:
	$(GPP) $(FLAGS) -c $<

.c.o:
	$(GCC) $(FLAGS) -c $<


# Clean up
clean:
	rm -f *~ .*~ \#*\# *.o *.tmp* Chaine*.txt *.png *.plt Reseau*.txt
	rm -f $(EXEC) 

# Dependencies
depend: 

	$(GCC) -M $(CPPFLAGS) $(SOURCES) > .depend
include .depend



